#!/bin/bash

# TODO: Handle automatic positive/negative detection
# TODO: Resize to fit in actual folder region
# TODO: use variable in folderify

SCRIPT_DIR="`dirname $0`"
SCRIPT_NAME="`basename $0`"

FOLDER_ICONS_FOLDER="${SCRIPT_DIR}/GenericFolderIcon.iconset"
SETICON_PROGRAM="${SCRIPT_DIR}/lib/seticon"


################################################################


HR_DIVIDE="----------------"

function show_help {
cat <<HEREDOC

Usage: $SCRIPT_NAME <image.png> [<optional target file/folder>]

- The file should be an image with a transparent background (i.e. the corners should be transparent).
- If no target is specified, $SCRIPT_NAME will produce a .iconset folder and a .icns file with various resolutions of icons generated from the input file.
- If a target file is specified, the icon is assigned to that file instead.

HEREDOC
}

function echocol {
 echo -e "\033[1;$1m$2\033[0m"
}


################################################################


if [ $# -eq 0 ]
then
	show_help
	exit -1
fi

FILE="$1"

if [ ! -f "${FILE}" ]
then
	echo ""
	echocol 31 "ERROR - Not a file: ${FILE}"
	show_help
	exit 1
fi

if [ $# -gt 1 ]
then
  ASSIGN_TO_EXISTING_FILE=1
  TARGET_FILE_OR_FOLDER="$2"

	if [ -e "${TARGET_FILE_OR_FOLDER}" ]
	then
		echo "Target file/folder: ${TARGET_FILE_OR_FOLDER}"
	else
		echo ""
		echocol 31 "ERROR: Target file/folder does not exist: ${TARGET_FILE_OR_FOLDER}"
		show_help
		exit -1
	fi
else
	ASSIGN_TO_EXISTING_FILE=0
fi


################################################################


TEMP_FOLDER=$(mktemp -d "/tmp/folderify.XXXXXX")

if [ "${ASSIGN_TO_EXISTING_FILE}" -eq 1 ]
then
	ICONSET_FOLDER="${TEMP_FOLDER}/iconset.iconset"
	ICNS_FILE="${TEMP_FOLDER}/icns.icns"
else
	# TODO: Make these into options.
	ICONSET_FOLDER="${FILE%.*}.iconset"
	ICNS_FILE="${FILE%.*}.icns"
fi


################################################################


function folderify {

	FILE="${1}"
	NAME="${2}"
	scale="${3}"
	width="${4}"
	height="${5}"
	offset_center="$6"

	main_opacity="15"
	offset_white="1"
	opacity_white="100"
	offset_black="1"

	echo "Generating ${NAME} image..."
	TEMP_FILE_OUT="${ICONSET_FOLDER}/icon_${NAME}.png"

	TEMP_FILE="${TEMP_FOLDER}/trimmed_${NAME}.png"
	convert "${FILE}" -trim -resize "${width}x${height}" -bordercolor none -border 10 "${TEMP_FILE}"

	convert "$FOLDER_ICONS_FOLDER/icon_${NAME}.png" \( \( "${TEMP_FILE}" -negate -colorize 3,23,40 -negate \) \
	\( \
		\( \
			\( \
				"${TEMP_FILE}" \
				\( \
					"${TEMP_FILE}" -negate -shadow 100x1+10+0 -geometry -2-2 \
				\) \
				-compose dst-out -composite +repage \
			\) \
			\( \
				"${TEMP_FILE}" \
				\( \
					"${TEMP_FILE}" -negate -geometry +0-1 \
				\) \
				-compose dst-out -composite +repage -negate -geometry +0+${offset_white} \
			\) \
			-compose dissolve -define compose:args=${opacity_white}x50 -composite +repage \
		\) \
		\( \
			"${TEMP_FILE}" \
			\( \
				"${TEMP_FILE}" -negate -geometry +0+1 \
			\) \
			-compose dst-out -composite +repage \
		\) \
		-compose dissolve -define compose:args=50x80 -composite \
	\) \
	-compose dissolve -define compose:args=60x$main_opacity -composite +repage \
	-gravity Center -geometry +0+${offset_center} \
	+repage \
	\) \
	-compose over -composite  "${TEMP_FILE_OUT}"
 }

################################################################

echo ""
echo "Making icon file for ${FILE}"

echo "${HR_DIVIDE}"

mkdir -p "${ICONSET_FOLDER}"


folderify "$FILE" "16x16"        16     12   8  1 &
folderify "$FILE" "16x16@2x"     32     26  14  2 &
folderify "$FILE" "32x32"        32     26  14  2 &
folderify "$FILE" "32x32@2x"     64     52  28  4 &

folderify "$FILE" "128x128"     128    103  53  4 &
folderify "$FILE" "128x128@2x"  256    206 106  9 &
folderify "$FILE" "256x256"     256    206 106  9 &
folderify "$FILE" "256x256@2x"  512    412 212 18 &
folderify "$FILE" "512x512"     512    412 212 18 &
folderify "$FILE" "512x512@2x" 1024    824 424 36 &

wait


################################################################


echo "${HR_DIVIDE}"
echo "Making the .icns file..."

iconutil \
	--convert icns \
	--output "${ICNS_FILE}" \
	"${ICONSET_FOLDER}"


################################################################


if [ "${ASSIGN_TO_EXISTING_FILE}" -eq 1 ]
then
	${SETICON_PROGRAM} -d "${ICNS_FILE}" "${TARGET_FILE_OR_FOLDER}"
else
	${SETICON_PROGRAM} -d "${ICNS_FILE}" "${ICNS_FILE}"
fi


################################################################


rm -rf "${TEMP_FOLDER}"

echo "${HR_DIVIDE}"

echo "Done."
echo ""
